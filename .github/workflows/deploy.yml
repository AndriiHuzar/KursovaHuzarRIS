name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Виконується на основній гілці

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Клонування репозиторію
      - name: Checkout repository
        uses: actions/checkout@v3

      # Встановлення Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Встановлення залежностей та збірка проєкту
      - name: Install and build
        run: |
          npm install
          npm run build

      # Архівування збірки
      - name: Archive production build
        run: |
          tar -czf dist.tar.gz dist

      # Встановлення Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Створення Docker Compose файлу
      - name: Create Docker Compose file
        run: |
          echo "
          version: '3'
          services:
            prometheus:
              image: prom/prometheus:latest
              container_name: prometheus
              ports:
                - 9090:9090
              volumes:
                - ./prometheus.yml:/etc/prometheus/prometheus.yml

            grafana:
              image: grafana/grafana:latest
              container_name: grafana
              ports:
                - 3000:3000
              environment:
                - GF_SECURITY_ADMIN_PASSWORD=admin
              depends_on:
                - prometheus
              networks:
                - monitoring

          networks:
            monitoring:
              driver: bridge
          " > docker-compose.yml

      # Створення файлу конфігурації Prometheus
      - name: Create Prometheus configuration file
        run: |
          echo "
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: 'vuejs-app'
              static_configs:
                - targets: ['host.docker.internal:80']
          " > prometheus.yml

      # Запуск контейнерів
      - name: Start Docker containers
        run: |
          docker-compose up -d

      # Перевірка статусу контейнерів
      - name: Check Docker containers status
        run: |
          docker ps

      # Передача артефакту на Ubuntu
      - name: Transfer artifact to Ubuntu
        run: |
          scp -o StrictHostKeyChecking=no dist.tar.gz ${{ secrets.UBUNTU_USER }}@${{ secrets.UBUNTU_HOST }}:/path/to/save/artifact/
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        shell: bash
